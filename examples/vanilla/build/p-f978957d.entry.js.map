{"version":3,"names":["jsConsoleMirrorCss","JsConsoleMirrorStyle0","ErrorLevel","JsConsoleMirror","this","originalLog","console","log","originalError","error","originalWarn","warn","originalInfo","info","originalDebug","debug","isConsoleOverridden","handlePromiseRejection","event","logs","level","message","reason","componentWillLoad","args","map","arg","String","apply","window","onerror","source","lineno","colno","addEventListener","disconnectedCallback","removeEventListener","componentDidUpdate","logContainer","scrollTop","scrollHeight","render","h","key","class","ref","el","toUpperCase"],"sources":["src/components/js-console-mirror/js-console-mirror.css?tag=js-console-mirror&encapsulation=shadow","src/components/js-console-mirror/js-console-mirror.tsx"],"sourcesContent":[":host {\n  --console-mirror-background: #333;\n  --console-mirror-color: #fff;\n  --console-mirror-title-color: #fff;\n  --console-mirror-log-background: #444;\n  --console-mirror-log-border: #555;\n  --console-mirror-log-color-info: #5bc0de;\n  --console-mirror-log-color-log: #ffffff;\n  --console-mirror-log-color-debug: #6c757d;\n  --console-mirror-log-color-warn: #f0ad4e;\n  --console-mirror-log-color-error: #d9534f;\n\n  display: block;\n  font-family: sans-serif;\n  background: var(--console-mirror-background);\n  color: var(--console-mirror-color);\n  font-size: var(--console-mirror-font-size, 14px);\n  padding: 10px;\n  border-radius: 5px;\n  height: 200px;\n  overflow-y: auto;\n}\n\n.title {\n  font-size: 1.1rem;\n  margin-bottom: 8px;\n  color: var(--console-mirror-title-color);\n}\n\n.log-section {\n  max-height: 170px;\n  overflow-y: auto;\n}\n\n.log-section .log-line {\n  font-family: monospace;\n  font-size: 0.7rem;\n  padding-bottom: 6px;\n  border-bottom: 1px solid var(--console-mirror-log-border);\n  background-color: var(--console-mirror-log-background);\n  padding: 5px;\n  width: 100%;\n}\n\n.log-section .log-line .log-level {\n  display: inline-block;\n  width: 50px;\n  font-weight: 600;\n}\n\n.log-section .log-line .info {\n  color: var(--console-mirror-log-color-info);\n}\n\n.log-section .log-line .log {\n  color: var(--console-mirror-log-color-log);\n}\n\n.log-section .log-line .debug {\n  color: var(--console-mirror-log-color-debug);\n}\n\n.log-section .log-line .warn {\n  color: var(--console-mirror-log-color-warn);\n}\n\n.log-section .log-line .error {\n  color: var(--console-mirror-log-color-error);\n}\n","import { Component, State, h, Element } from '@stencil/core';\n\nenum ErrorLevel {\n  info = 'info',\n  log = 'log',\n  debug = 'debug',\n  warn = 'warn',\n  error = 'error',\n}\n\ninterface Log {\n  level: ErrorLevel;\n  message: string;\n}\n\n@Component({\n  tag: 'js-console-mirror',\n  styleUrl: 'js-console-mirror.css',\n  shadow: true,\n})\nexport class JsConsoleMirror {\n  @State() logs: Log[] = [];\n\n  @Element() el: HTMLElement;\n  private logContainer: HTMLElement;\n\n  private originalLog = console.log;\n  private originalError = console.error;\n  private originalWarn = console.warn;\n  private originalInfo = console.info;\n  private originalDebug = console.debug;\n\n  private isConsoleOverridden = false;\n\n  componentWillLoad() {\n    if (!this.isConsoleOverridden) {\n      console.log = (...args) => {\n        this.logs = [...this.logs, ...args.map(arg => ({ level: ErrorLevel.log, message: String(arg) }))];\n        this.originalLog.apply(console, args);\n      };\n\n      console.error = (...args) => {\n        this.logs = [...this.logs, ...args.map(arg => ({ level: ErrorLevel.error, message: String(arg) }))];\n        this.originalError.apply(console, args);\n      };\n\n      console.warn = (...args) => {\n        this.logs = [...this.logs, ...args.map(arg => ({ level: ErrorLevel.warn, message: String(arg) }))];\n        this.originalWarn.apply(console, args);\n      };\n\n      console.info = (...args) => {\n        this.logs = [...this.logs, ...args.map(arg => ({ level: ErrorLevel.info, message: String(arg) }))];\n        this.originalInfo.apply(console, args);\n      };\n\n      console.debug = (...args) => {\n        this.logs = [...this.logs, ...args.map(arg => ({ level: ErrorLevel.debug, message: String(arg) }))];\n        this.originalDebug.apply(console, args);\n      };\n\n      window.onerror = (message, source, lineno, colno) => {\n        this.logs = [...this.logs, { level: ErrorLevel.error, message: `${message} at ${source}:${lineno}:${colno}` }];\n        return false; // Let the default handler run\n      };\n\n      window.addEventListener('unhandledrejection', this.handlePromiseRejection);\n\n      this.isConsoleOverridden = true;\n    }\n  }\n\n  disconnectedCallback() {\n    console.log = this.originalLog;\n    console.error = this.originalError;\n    console.warn = this.originalWarn;\n    console.info = this.originalInfo;\n    console.debug = this.originalDebug;\n\n    window.onerror = null;\n    window.removeEventListener('unhandledrejection', this.handlePromiseRejection);\n\n    this.isConsoleOverridden = false;\n  }\n\n  componentDidUpdate() {\n    if (this.logContainer) {\n      this.logContainer.scrollTop = this.logContainer.scrollHeight;\n    }\n  }\n\n  handlePromiseRejection = (event: PromiseRejectionEvent) => {\n    this.logs = [...this.logs, { level: ErrorLevel.error, message: `Unhandled promise rejection: ${event.reason}` }];\n  };\n\n  render() {\n    return (\n      <div>\n        <div class=\"title\">CONSOLE OUTPUT</div>\n        <div class=\"log-section\" ref={el => this.logContainer = el}>\n          {this.logs.map(log => (\n            <div class=\"log-line\">\n              <span class={`log-level ${log.level}`}>{`[${log.level.toUpperCase()}]`}</span> {`${log.message}`}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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"}